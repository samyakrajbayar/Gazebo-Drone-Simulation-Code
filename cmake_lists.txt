cmake_minimum_required(VERSION 3.0.2)
project(drone_autopilot_sim)

## Compile as C++14
add_compile_options(-std=c++14)

## Find catkin and required packages
find_package(catkin REQUIRED COMPONENTS
  roscpp
  rospy
  std_msgs
  geometry_msgs
  sensor_msgs
  nav_msgs
  gazebo_ros
  gazebo_msgs
  tf
  tf2
  tf2_ros
)

## Find Gazebo
find_package(gazebo REQUIRED)

## Find Eigen3
find_package(Eigen3 REQUIRED)

################################################
## Declare ROS messages, services and actions ##
################################################
# No custom messages needed for this package

###################################
## catkin specific configuration ##
###################################
catkin_package(
  INCLUDE_DIRS include
  LIBRARIES gazebo_wind_plugin
  CATKIN_DEPENDS 
    roscpp 
    rospy 
    std_msgs 
    geometry_msgs 
    sensor_msgs 
    nav_msgs
    gazebo_ros
    tf
    tf2
    tf2_ros
  DEPENDS 
    GAZEBO
    EIGEN3
)

###########
## Build ##
###########

## Specify additional locations of header files
include_directories(
  include
  ${catkin_INCLUDE_DIRS}
  ${GAZEBO_INCLUDE_DIRS}
  ${EIGEN3_INCLUDE_DIRS}
)

## Link directories
link_directories(
  ${GAZEBO_LIBRARY_DIRS}
)

## Declare a C++ library for wind plugin
add_library(gazebo_wind_plugin
  plugins/wind_force_plugin.cpp
)

## Add cmake target dependencies
add_dependencies(gazebo_wind_plugin 
  ${${PROJECT_NAME}_EXPORTED_TARGETS} 
  ${catkin_EXPORTED_TARGETS}
)

## Specify libraries to link a library or executable target against
target_link_libraries(gazebo_wind_plugin
  ${catkin_LIBRARIES}
  ${GAZEBO_LIBRARIES}
)

## Mark executables for installation
catkin_install_python(PROGRAMS
  scripts/autopilot_controller.py
  scripts/wind_plugin.py
  DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
)

#############
## Install ##
#############

## Mark cpp header files for installation
install(DIRECTORY include/${PROJECT_NAME}/
  DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
  FILES_MATCHING PATTERN "*.h" PATTERN "*.hpp"
)

## Mark other files for installation
install(DIRECTORY
  launch
  worlds
  models
  config
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
)

## Mark libraries for installation
install(TARGETS gazebo_wind_plugin
  ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  RUNTIME DESTINATION ${CATKIN_GLOBAL_BIN_DESTINATION}
)

#############
## Testing ##
#############

if(CATKIN_ENABLE_TESTING)
  find_package(rostest REQUIRED)
  
  # Python tests
  catkin_add_nosetests(test/test_autopilot.py)
  
  # Launch file tests
  add_rostest(test/simulation_test.launch)
endif()

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_drone_sim.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)